{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation Create VPC, 4 subnets over 2 AZs, DMZ and routing.",

  "Parameters" : {

    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the bastion host",
      "Type" : "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },
    "SSHLocation" : {
      "Description" : "Lockdown SSH access to the bastion host (default can be accessed from anywhere)",
      "Type" : "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default" : "0.0.0.0/0",
      "ConstraintDescription" : "must be a valid CIDR range of the form x.x.x.x/x."
    },
    "Owner" : {
      "Description" : "Tag that will be used in tags and hostnames. ",
      "Type" : "String",
      "MinLength": "2",
      "MaxLength": "20",
      "ConstraintDescription" : "between 2 and 20 characters"
    },
    "VPCName" : {
      "Description" : "Tag that will be used in tags and hostnames. ",
      "Type" : "String",
      "MinLength": "2",
      "MaxLength": "20",
      "ConstraintDescription" : "between 2 and 20 characters"
    },
    "CIDR" : {
      "Type" : "String",
      "Description" : "CIDR for VPC. This must be a valid IP address for Subnet",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP address of the form x.x.x.x."
    },
    "CIDRPubNet" : {
      "Type" : "String",
      "Description" : "CIDR for first DMZ subnet. This must be a valid IP address for Subnet",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP address of the form x.x.x.x/x."
    },
    "CIDRdmzA" : {
      "Type" : "String",
      "Description" : "CIDR for DMZ subnet. This must be a valid IP address for Subnet",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP address of the form x.x.x.x/x."
    },
    "CIDRdmzB" : {
      "Type" : "String",
      "Description" : "CIDR for second DMZ subnet. This must be a valid IP address for Subnet",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP address of the form x.x.x.x/x."
    },
    "CIDRdmzC" : {
      "Type" : "String",
      "Description" : "CIDR for third DMZ subnet. This must be a valid IP address for Subnet",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP address of the form x.x.x.x/x."
    },
    "CIDRprivA" : {
      "Type" : "String",
      "Description" : "CIDR for Private network A. This must be a valid IP address for Subnet",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP address of the form x.x.x.x/x."
    },
    "CIDRprivB" : {
      "Type" : "String",
      "Description" : "CIDR for Private network B. This must be a valid IP address for Subnet",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP address of the form x.x.x.x/x."
    },
    "CIDRprivC" : {
      "Type" : "String",
      "Description" : "CIDR for Private network C. This must be a valid IP address for Subnet",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP address of the form x.x.x.x/x."
    },
    "CIDRdbA" : {
      "Type" : "String",
      "Description" : "CIDR for DB network A. This must be a valid IP address for Subnet",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP address of the form x.x.x.x/x."
    },
    "CIDRdbB" : {
      "Type" : "String",
      "Description" : "CIDR for DB network B. This must be a valid IP address for Subnet",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP address of the form x.x.x.x/x."
    },
    "CIDRdbC" : {
      "Type" : "String",
      "Description" : "CIDR for DB network C. This must be a valid IP address for Subnet",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP address of the form x.x.x.x/x."
    }
  },


  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "PV64"   },
      "t2.micro"    : { "Arch" : "HVM64"  },
      "t2.small"    : { "Arch" : "HVM64"  },
      "t2.medium"   : { "Arch" : "HVM64"  },
      "m1.small"    : { "Arch" : "PV64"   },
      "m1.medium"   : { "Arch" : "PV64"   },
      "m1.large"    : { "Arch" : "PV64"   },
      "m1.xlarge"   : { "Arch" : "PV64"   },
      "m2.xlarge"   : { "Arch" : "PV64"   },
      "m2.2xlarge"  : { "Arch" : "PV64"   },
      "m2.4xlarge"  : { "Arch" : "PV64"   },
      "m3.medium"   : { "Arch" : "HVM64"  },
      "m3.large"    : { "Arch" : "HVM64"  },
      "m3.xlarge"   : { "Arch" : "HVM64"  },
      "m3.2xlarge"  : { "Arch" : "HVM64"  },
      "c1.medium"   : { "Arch" : "PV64"   },
      "c1.xlarge"   : { "Arch" : "PV64"   },
      "c3.large"    : { "Arch" : "HVM64"  },
      "c3.xlarge"   : { "Arch" : "HVM64"  },
      "c3.2xlarge"  : { "Arch" : "HVM64"  },
      "c3.4xlarge"  : { "Arch" : "HVM64"  },
      "c3.8xlarge"  : { "Arch" : "HVM64"  },
      "g2.2xlarge"  : { "Arch" : "HVMG2"  },
      "r3.large"    : { "Arch" : "HVM64"  },
      "r3.xlarge"   : { "Arch" : "HVM64"  },
      "r3.2xlarge"  : { "Arch" : "HVM64"  },
      "r3.4xlarge"  : { "Arch" : "HVM64"  },
      "r3.8xlarge"  : { "Arch" : "HVM64"  },
      "i2.xlarge"   : { "Arch" : "HVM64"  },
      "i2.2xlarge"  : { "Arch" : "HVM64"  },
      "i2.4xlarge"  : { "Arch" : "HVM64"  },
      "i2.8xlarge"  : { "Arch" : "HVM64"  },
      "hi1.4xlarge" : { "Arch" : "HVM64"  },
      "hs1.8xlarge" : { "Arch" : "HVM64"  },
      "cr1.8xlarge" : { "Arch" : "HVM64"  },
      "cc2.8xlarge" : { "Arch" : "HVM64"  }
    },

    "AWSRegionArch2AMI" : {
      "us-east-1"      : { "PV64" : "ami-515a1a61", "HVM64" : "ami-515a1a61", "HVMG2" : "ami-515a1a61"  },
      "us-west-2"      : { "PV64" : "ami-515a1a61", "HVM64" : "ami-515a1a61", "HVMG2" : "ami-515a1a61"  },
      "us-west-1"      : { "PV64" : "ami-515a1a61", "HVM64" : "ami-515a1a61", "HVMG2" : "ami-515a1a61"  },
      "eu-west-1"      : { "PV64" : "ami-515a1a61", "HVM64" : "ami-748e2903", "HVMG2" : "ami-00913777"  },
      "ap-southeast-1" : { "PV64" : "ami-20e1c572", "HVM64" : "ami-d6e1c584", "HVMG2" : "ami-fabe9aa8"  },
      "ap-northeast-1" : { "PV64" : "ami-21072820", "HVM64" : "ami-35072834", "HVMG2" : "ami-5dd1ff5c"  },
      "ap-southeast-2" : { "PV64" : "ami-8b4724b1", "HVM64" : "ami-fd4724c7", "HVMG2" : "ami-e98ae9d3"  },
      "sa-east-1"      : { "PV64" : "ami-9d6cc680", "HVM64" : "ami-956cc688", "HVMG2" : "NOT_SUPPORTED" },
      "cn-north-1"     : { "PV64" : "ami-a857c591", "HVM64" : "ami-ac57c595", "HVMG2" : "NOT_SUPPORTED" },
      "eu-central-1"   : { "PV64" : "ami-a03503bd", "HVM64" : "ami-b43503a9", "HVMG2" : "ami-b03503ad"  }
    }

  },

  "Resources" : {

    "VPC" : {
      "Type" : "AWS::EC2::VPC",
      "Properties" : {
        "EnableDnsSupport" : "true",
        "EnableDnsHostnames" : "true",
        "CidrBlock" : { "Ref" : "CIDR"},
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "DMZ" },
          { "Key" : "Name", "Value" : { "Ref" : "VPCName"} }
        ]
      }
    },

    "SubnetPubNet" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : "us-west-2a",
        "CidrBlock" : { "Ref" : "CIDRPubNet" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" :  "PubNet" },
          { "Key" : "Network", "Value" : "DMZ" }
        ]
      }
    },

    "SubnetCIDRdmzA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : "us-west-2a",
        "CidrBlock" : { "Ref" : "CIDRdmzA" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : "DMZ-A"  },
          { "Key" : "Network", "Value" : "DMZ" }
        ]
      }
    },

    "SubnetCIDRdmzB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : "us-west-2b",
        "CidrBlock" : { "Ref" : "CIDRdmzB" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : "DMZ-B"  },
          { "Key" : "Network", "Value" : "DMZ" }
        ]
      }
    },

    "SubnetCIDRdmzC" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : "us-west-2c",
        "CidrBlock" : { "Ref" : "CIDRdmzC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : "DMZ-C"  },
          { "Key" : "Network", "Value" : "DMZ" }
        ]
      }
    },

    "SubnetCIDRprivA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : "us-west-2a",
        "CidrBlock" : { "Ref" : "CIDRprivA" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : "Private-A"  },
          { "Key" : "Network", "Value" : "Private" }
        ]
      }
    },

    "SubnetCIDRprivB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : "us-west-2b",
        "CidrBlock" : { "Ref" : "CIDRprivB" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : "Private-B"  },
          { "Key" : "Network", "Value" : "Private" }
        ]
      }
    },

    "SubnetCIDRprivC" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : "us-west-2c",
        "CidrBlock" : { "Ref" : "CIDRprivC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : "Private-C"  },
          { "Key" : "Network", "Value" : "Private" }
        ]
      }
    },

    "SubnetCIDRdbA" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : "us-west-2a",
        "CidrBlock" : { "Ref" : "CIDRdbA" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : "db-A"  },
          { "Key" : "Network", "Value" : "DB" }
        ]
      }
    },

    "SubnetCIDRdbB" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : "us-west-2b",
        "CidrBlock" : { "Ref" : "CIDRdbB" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : "db-B"  },
          { "Key" : "Network", "Value" : "DB" }
        ]
      }
    },

    "SubnetCIDRdbC" : {
      "Type" : "AWS::EC2::Subnet",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "AvailabilityZone" : "us-west-2c",
        "CidrBlock" : { "Ref" : "CIDRdbC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : "db-C"  },
          { "Key" : "Network", "Value" : "DB" }
        ]
      }
    },

    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Private" }
        ]
      }
    },

    "GatewayToInternet" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
         "VpcId" : { "Ref" : "VPC" },
         "InternetGatewayId" : { "Ref" : "InternetGateway" }
       }
    },

    "DMZRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : "DMZRouteTable"  },
          { "Key" : "Network", "Value" : "DMZ" }
        ]
      }
    },

    "DMZRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "GatewayToInternet",
      "Properties" : {
        "RouteTableId" : { "Ref" : "DMZRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "PrivateRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : "PrivateRouteTable"  },
          { "Key" : "Network", "Value" : "Private" }
        ]
      }
    },

    "PrivateRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "NATVPN1",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PrivateRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "InstanceId" : { "Ref" : "NATVPN1" }

      }
    },

    "PublicRouteTable" : {
      "Type" : "AWS::EC2::RouteTable",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Name", "Value" : "PublicRouteTable"  },
          { "Key" : "Network", "Value" : "Public" }
        ]
      }
    },
    "PublicRoute" : {
      "Type" : "AWS::EC2::Route",
      "DependsOn" : "GatewayToInternet",
      "Properties" : {
        "RouteTableId" : { "Ref" : "PublicRouteTable" },
        "DestinationCidrBlock" : "0.0.0.0/0",
        "GatewayId" : { "Ref" : "InternetGateway" }
      }
    },

    "dmzASubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetCIDRdmzA" },
        "RouteTableId" : { "Ref" : "DMZRouteTable" }
      }
    },
    "dmzBSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetCIDRdmzB" },
        "RouteTableId" : { "Ref" : "DMZRouteTable" }
      }
    },
    "dmzCSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetCIDRdmzC" },
        "RouteTableId" : { "Ref" : "DMZRouteTable" }
      }
    },
    "privASubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetCIDRprivA" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },
    "privBSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetCIDRprivB" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },
    "privCSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetCIDRprivC" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },
    "dbASubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetCIDRdbA" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },
    "dbBSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetCIDRdbB" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },
    "dbCSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetCIDRdbC" },
        "RouteTableId" : { "Ref" : "PrivateRouteTable" }
      }
    },
    "PubNetSubnetRouteTableAssociation" : {
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetPubNet" },
        "RouteTableId" : { "Ref" : "PublicRouteTable" }
      }
    },

    "NetworkAcl" : {
      "Type" : "AWS::EC2::NetworkAcl",
      "Properties" : {
        "VpcId" : { "Ref" : "VPC" },
        "Tags" : [
          { "Key" : "Application", "Value" : { "Ref" : "AWS::StackName" } },
          { "Key" : "Network", "Value" : "Private" }
        ]
      }
    },

    "InboundHTTPPrivateNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "NetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "80", "To" : "80" }
      }
    },

    "InboundHTTPSPrivateNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "NetworkAcl" },
        "RuleNumber" : "101",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "443", "To" : "443" }
      }
    },

    "InboundSSHPrivateNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "NetworkAcl" },
        "RuleNumber" : "102",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : { "Ref" : "SSHLocation" },
        "PortRange" : { "From" : "22", "To" : "22" }
      }
    },

    "InboundEphemeralPrivateNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "NetworkAcl" },
        "RuleNumber" : "103",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "false",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "1024", "To" : "65535" }
      }
    },

    "OutboundPrivateNetworkAclEntry" : {
      "Type" : "AWS::EC2::NetworkAclEntry",
      "Properties" : {
        "NetworkAclId" : { "Ref" : "NetworkAcl" },
        "RuleNumber" : "100",
        "Protocol" : "6",
        "RuleAction" : "allow",
        "Egress" : "true",
        "CidrBlock" : "0.0.0.0/0",
        "PortRange" : { "From" : "0", "To" : "65535" }
      }
    },

    "PrivateSubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetCIDRdmzA" },
        "NetworkAclId" : { "Ref" : "NetworkAcl" }
      }
    },
    "PrivateSubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetCIDRdmzB" },
        "NetworkAclId" : { "Ref" : "NetworkAcl" }
      }
    },
    "PrivateSubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetCIDRdmzC" },
        "NetworkAclId" : { "Ref" : "NetworkAcl" }
      }
    },
    "PrivateSubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetCIDRprivA" },
        "NetworkAclId" : { "Ref" : "NetworkAcl" }
      }
    },
    "PrivateSubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetCIDRprivB" },
        "NetworkAclId" : { "Ref" : "NetworkAcl" }
      }
    },
    "PrivateSubnetNetworkAclAssociation" : {
      "Type" : "AWS::EC2::SubnetNetworkAclAssociation",
      "Properties" : {
        "SubnetId" : { "Ref" : "SubnetCIDRprivC" },
        "NetworkAclId" : { "Ref" : "NetworkAcl" }
      }
    },
    "NATVPNSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable access to the EC2 host",
        "VpcId" : { "Ref" : "VPC" },
        "SecurityGroupIngress" : [
             { "IpProtocol" : "tcp",
               "FromPort" : "22",
               "ToPort" : "22",
               "CidrIp" : { "Ref" : "SSHLocation" }
             },
             { "IpProtocol" : "tcp",
               "FromPort" : "10000",
               "ToPort" : "10000",
               "CidrIp" : { "Ref" : "SSHLocation" }
             },
             { "IpProtocol" : "udp",
               "FromPort" : "1194",
               "ToPort" : "1194",
               "CidrIp" : "0.0.0.0/0"
             },
             { "IpProtocol" : "-1",
               "CidrIp" : { "Ref" : "CIDR" }
             }
           ]
     }
    }
  },

  "Outputs" : {
    "VPCId" : {
      "Description" : "VPCId of the newly created VPC",
      "Value" :  { "Ref" : "VPC" }
    },
    "DNSName" : {
      "Description" : "DNS Name of the EC2 host",
      "Value" :  { "Fn::GetAtt" : ["NATVPN1", "PrivateDnsName"] }
    }
  }
}
